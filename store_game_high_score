class GameEntry():
    """Represent one entry of a list of high scores"""
    def __init__(self,name,score):
        self._name = name
        self._score = score

    def get_name(self):
        return self._name

    def get_score(self):
        return self._score

    def __str__(self):
        return '({0},{1})'.format(self._name, self._score)

class ScoreBoard():
    def __init__(self,capacity=10):
        self._board = [None]*capacity
        self._n = 0

    def __getitem__(self, k):
        return self._board[k]

    def __str__(self):
        return '\n'.join(str(self._board[j]) for j in range(self._n))

    def add(self, entry):
        score = entry.get_score()
        #Does the new entry qualify as high score
        if self._n < len(self._board) or score > self._board[-1].get_score():
            if self._n < len(self._board):
                self._n += 1

            #shift lower score righward to make room for new entry
            j = self._n - 1
            while j>0 and self._board[j-1].get_score() < score:
                self._board[j] = self._board[j-1]
                j-=1
            self._board[j] = entry

entry = []
name = ["sandy","ashutosh","gaurav","sagar"]
marks = [10,45,67,32]
for i in range(4):
    entry.append(GameEntry(name[i],marks[i]))

scoreboard = ScoreBoard()
for i in range(4):
    scoreboard.add(entry[i])

print(scoreboard.__str__())
