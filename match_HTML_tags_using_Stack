class Empty(Exception):
    #Error attempting to access an element from an empty container
    pass

class ArrayStack():
    #LIFO Stack implementationusing Python list for storage
    def __init__(self):
        #Create empty stack
        self._data = []                 #non public list instance

    def __len__(self):
        #Return number of element in stack
        return len(self._data)

    def is_empty(self):
        #Return true if stack is empty
        return len(self._data)==0

    def push(self, e):
        #add element to top of stack
        return self._data.append(e)

    def top(self):
        #Return but do not remove element at top of stack
        #Raise empty error exception if stack is empty
        if self.is_empty():
            raise Empty('Stack is empty')
        return self._data[-1]

    def pop(self):
        #Remove and return last element of stack
        #Raise empty error exception if stack is empty
        if self.is_empty():
            raise Empty('Stack is empty')
        return self._data.pop()


def is_matched_html(raw):
    #Return true if all HTML tags are matched properly
    S = ArrayStack()
    j = raw.find('<')                   #find first '<' character if any
    while j!=-1:
        k = raw.find('>',j+1)           #find next '>' character
        if k == -1:
            return False
        tag = raw[j+1:k]                #strip away < >
        if not tag.startswith('/'):     #this is the opening tag
            S.push(tag)
        else:                           #this is the closing tag
            if S.is_empty():
                return False
            if tag[1:] != S.pop():
                return False            #mismatched
        j = raw.find('<',k+1)           #find next '<' character if any
    return S.is_empty()
